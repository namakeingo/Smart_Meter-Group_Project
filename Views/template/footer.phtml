</div>
</div>
</div>
<!-- /#page-content-wrapper -->


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="js/jquery-migrate-3.0.1.min.js"></script>
<script src="js/jquery.easing.1.3.js"></script>
<script src="js/jquery.stellar.min.js"></script>
<script src="js/aos.js"></script>
<script src="js/scrollax.min.js"></script>
<script src="js/main.js"></script>

<script>
    $("#menu-toggle").click(function(e) {
        e.preventDefault();
        $("#wrapper").toggleClass("toggled");
    });
</script>

<!--<script>-->
<!--    //script that assure that all charts are loaded with the window width-->
<!--    function activeElement() {-->
<!--        document.getElementById("emptySpaceTab").className = "tab-pane";-->
<!--        document.getElementById("weekTab").className = "tab-pane";-->
<!--        document.getElementById("monthTab").className = "tab-pane";-->
<!--        document.getElementById("yearTab").className = "tab-pane";-->
<!--    }-->
<!--    setTimeout(activeElement, 1000);-->
<!--</script>-->
<script src="http://bernii.github.io/gauge.js/dist/gauge.min.js"></script>
<div id="autoReloadElec" hidden>
    <?php echo $elecInstant =  ((new ConnectionConsumption('ELEC','PT1M', 'now - 3 minutes', 'now - 2 minutes'))->getData()->getTotalConsumption())*100000
    ?>
</div>
<div id="autoReloadGas" hidden>
    <?php echo $gasInstant =  ((new ConnectionConsumption('GAS','PT1M', 'now - 3 minutes', 'now - 2 minutes'))->getData()->getTotalConsumption())*100000
    ?>
</div>
<script>
    function reload(){
        var container = document.getElementById("autoReloadElec");
        var content = container.innerHTML;
        container.innerHTML = content;
        container = document.getElementById("autoReloadGas");
        content = container.innerHTML;
        container.innerHTML = content;
    }
</script>
<script>
    $( document ).ready(function() {
        $( "#doughnut" ).click(function() {
            setTimeout(
                function() {
                    chartContainerElec('chartContainer','Electricity',<?php echo $view->totalElec ?>,40)
                },
                50);
            setTimeout(
                function() {
                        chartContainerGas('chartContainer2','Gas',<?php echo $view->totalGas ?>,40)
                },
                50);
        });
        function zeroPad(num, places) {
            var zero = places - num.toString().length + 1;
            return Array(+(zero > 0 && zero)).join("0") + num;
        }
        $( "#instant" ).click(function() {
            setTimeout(
                function() {
                    var target1 = document.getElementById('speedElec'); // your canvas element
                    var gauge1 = new Gauge(target1).setOptions(opts); // create sexy gauge!

                    gauge1.maxValue = 28000; // set max gauge value
                    gauge1.setMinValue(0);  // Prefer setter over gauge.minValue = 0
                    gauge1.animationSpeed = 22; // set animation speed (32 is default value)
                    gauge1.set(0);
                    setInterval(function(){
                        var value = document.getElementById("autoReloadElec").innerHTML;
                        var x1 = parseInt(value);
                        gauge1.set(x1+Math.floor(Math.random() * Math.floor(200))); // set actual value
                        gauge1.setTextField(document.getElementById("preview-ElectricityHidden"));
                        var str = document.getElementById("preview-ElectricityHidden").innerHTML;
                        str = str.replace(",", "");
                        var x = parseInt(str);
                        document.getElementById("preview-Electricity").innerHTML = '0.'+zeroPad(x, 5)+' kWh';
                        reload();
                    }, 1000);
                },
                50);
            setTimeout(
                function() {
                    var target2 = document.getElementById('speedGas'); // your canvas element
                    var gauge2= new Gauge(target2).setOptions(opts); // create sexy gauge!

                    gauge2.maxValue = 22000; // set max gauge value
                    gauge2.setMinValue(0);  // Prefer setter over gauge.minValue = 0
                    gauge2.animationSpeed = 22; // set animation speed (32 is default value)
                    gauge2.set(0);
                    setInterval(function(){
                        var value = document.getElementById("autoReloadGas").innerHTML;
                        var x1 = parseInt(value);
                        gauge2.set(x1+Math.floor(Math.random() * Math.floor(200))); // set actual value
                        gauge2.setTextField(document.getElementById("preview-GasHidden"));
                        var str = document.getElementById("preview-GasHidden").innerHTML;
                        str = str.replace(",", "");
                        var x = parseInt(str);
                        document.getElementById("preview-Gas").innerHTML = '0.'+zeroPad(x, 5)+' kWh';
                        reload();
                    }, 500);
                },
                50);
        });

    });

    function chartContainerElec ( target,type,Cost,setBadget) {
        var remainingBudget = setBadget-Cost;
        CanvasJS.addColorSet("set",
            [//colorSet Array
                <?php echo "\"" . $colour[0] . "\""; ?>
                ,"lightgrey"
            ]);
        var chart = new CanvasJS.Chart(target,
            {
                colorSet: "set",

                exportEnabled: true,
                animationEnabled: true,
                title:{
                    text: type+" Monthly Cost "
                },
                legend:{
                    cursor: "pointer",
                    itemclick: explodePie,
                    verticalAlign: "bottom",  // "center" , "top"
                    fontSize: 17,
                },
                data: [{
                    type: "doughnut",
                    indexLabelFontSize: 17,
                    showInLegend: true,
                    toolTipContent: "{name}: <strong>£{y}</strong>",
                    indexLabel: "{name} - £{y}",
                    dataPoints: [
                        { y: Cost, name: "Current " +type +" Cost", exploded: true },
                        { y: remainingBudget, name: "Remaining  Budget" },

                    ]
                }]
            });
        chart.render();

    };

    function chartContainerGas ( target,type,Cost,setBadget) {
        var remainingBudget = setBadget-Cost;
        CanvasJS.addColorSet("set",
            [//colorSet Array
                <?php echo "\"" . $colour[1] . "\""; ?>
                ,"lightgrey"
            ]);
        var chart = new CanvasJS.Chart(target,
            {
                colorSet: "set",

                exportEnabled: true,
                animationEnabled: true,
                title:{
                    text: type+" Monthly Cost "
                },
                legend:{
                    cursor: "pointer",
                    itemclick: explodePie,
                    verticalAlign: "bottom",  // "center" , "top"
                    fontSize: 17,
                },
                data: [{
                    type: "doughnut",
                    showInLegend: true,
                    indexLabelFontSize: 17,
                    toolTipContent: "{name}: <strong>£{y}</strong>",
                    indexLabel: "{name} - £{y}",
                    dataPoints: [
                        { y: Cost, name: "Current " +type +" Cost", exploded: true },
                        { y: remainingBudget, name: "Remaining  Budget" },

                    ]
                }]
            });
        chart.render();

    };

    function explodePie (e) {
        if(typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
        } else {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
        }
        e.chart.render();

    }
</script>

<!--speed-->
<script>
    window.onload = function{setStyle('energy1',<?php echo $view->totalElec; ?> ,20)};
    window.onload = function{setStyle('gas1',<?php echo $view->totalGas; ?> ,20)};

    function setStyle(ID, value, budget){
        var color;
        var budgetMed= budget/4*3;
        if (value < budgetMed) {
            color = " color-yellow";
        }
        else if (value < budget) {
            color = " color-orange";
        }
        else if (value >= budget) {
            color = " color-red";
        }
        var elements = document.getElementsByClassName(ID);
        elements[0].className = "fa-stack fa-2x "+color;
        elements[1].className = "overlay-to-circle "+color;
        elements[2].className = "in-circle "+color;
    }
</script>
<script>
    var opts = {
        angle: -0.3, // The span of the gauge arc
        lineWidth: 0.3, // The line thickness
        radiusScale: 1, // Relative radius
        pointer: {
            length: 0.55, // // Relative to gauge radius
            strokeWidth: 0.031, // The thickness
            color: '#575757' // Fill color
        },
        limitMax: false,     // If false, max value increases automatically if value > maxValue
        limitMin: true,     // If true, the min value of the gauge will be fixed
        // colorStart: '#6FADCF',   // Colors
        // colorStop: '#8FC0DA',    // just experiment with them
        percentColors: [[0.0, "#177e11" ], [0.60, "#f9c802"], [1.0, "#ff0000"]],
        strokeColor: '#E0E0E0',  // to see which ones work best for you
        generateGradient: true,
        highDpiSupport: true,     // High resolution support

    };
</script>

<!--Inverted -->
<script type="text/javascript">
    function invertColor() {
        // the css we are going to inject
        var css = 'html {-webkit-filter: invert(100%);' +
            '-moz-filter: invert(100%);' +
            '-o-filter: invert(100%);' +
            '-ms-filter: invert(100%); }';

        var head = $('head')[0];
        var invertStyle = $('#invert')[0];

        if (invertStyle) {
            head.removeChild(invertStyle);
        } else {
            var style = document.createElement('style');

            style.type = 'text/css';
            style.id = 'invert';
            if (style.styleSheet){
                style.styleSheet.cssText = css;
            } else {
                style.appendChild(document.createTextNode(css));
            }

            //injecting the css to the head
            head.appendChild(style);
        }}

</script>

</body>
</html>
