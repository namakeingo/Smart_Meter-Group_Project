<script>
    google.charts.load('current', {packages: ['corechart', 'bar']});

    //Comparison Chart
    if(document.title==='Comparison') {
        google.charts.setOnLoadCallback(function () {
            drawChart('<?php echo $view->type ?>', 'CompDay', 'Days', 'Compare',
                httpGet('<?php echo $view->type ?>', 1, 'P1D', 'today 00:00:00', 'now', 'D d', null, 'yesterday 00:00:00', 'yesterday 23:59:59'), true)
        });
        function initializeDay() {
            $('#dayTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'CompDay', 'Days', 'Compare',
                            httpGet('<?php echo $view->type ?>', 1, 'P1D', 'today 00:00:00', 'now', 'D d', null, 'yesterday 00:00:00', 'yesterday 23:59:59'), true)
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeDay);
        function initializeWeek() {
            $('#weekTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'CompWeek', 'Weeks', 'Compare',
                            httpGet('<?php echo $view->type ?>', 1, 'P1W', 'last monday 00:00:00', 'last monday +6days 23:59:59', 'd-m','+6days', 'last monday 00:00:00 -7days', 'last monday 00:00:00 -1seconds'), true)
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeWeek);
        function initializeMonth() {
            $('#monthTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'CompMonth', 'Months', 'Compare',
                            httpGet('<?php echo $view->type ?>', 1, 'P1M', 'first day of this month 00:00:00', 'now', 'M', null,'first day of last month 00:00:00','first day of this month 00:00:00 -1seconds'),true);
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeMonth);
        function initializeYear() {
            $('#yearTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'CompYear', 'Years', 'Compare',
                            httpGet('<?php echo $view->type ?>', 1, 'P1Y', 'first day of January 00:00:00', 'now', 'Y', null,'first day of January 00:00:00 -1year','first day of January 00:00:00 -1seconds'),true);
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeYear);
    }

    //chart Elec and Gas for Normal Charts
    if(document.title==='Electricity' || document.title==='Gas') {
        google.charts.setOnLoadCallback(function () {
            drawChart('<?php echo $view->type ?>', 'Day', 'Hours', '<?php echo $view->pageTitle ?>',
                httpGet('<?php echo $view->type ?>', 1, 'PT1H', 'now 00:00:00', 'now', 'H:i', '+1hours'))
        });
        function initializeDay() {
            $('#dayTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'Day', 'Hours', '<?php echo $view->pageTitle ?>',
                            httpGet('<?php echo $view->type ?>', 1, 'PT1H', 'now 00:00:00', 'now', 'H:i', '+1hours'));
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeDay);
        function initializeWeek() {
            $('#weekTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'Week', 'Days', '<?php echo $view->pageTitle ?>',
                            httpGet('<?php echo $view->type ?>', 1, 'P1D', 'last monday 00:00:00', 'now', 'D'));
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeWeek);
        function initializeMonth() {
            $('#monthTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'Month', 'Weeks', '<?php echo $view->pageTitle ?>',
                            httpGet('<?php echo $view->type ?>', 1, 'P1W', 'first monday of this month 00:00:00 -7 days', 'now', 'd-m', '+6days'));
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeMonth);
        function initializeYear() {
            $('#yearTabTop').click(function () {
                setTimeout(
                    function () {
                        drawChart('<?php echo $view->type ?>', 'Year', 'Months', '<?php echo $view->pageTitle ?>',
                            httpGet('<?php echo $view->type ?>', 1, 'P1M', 'first day of January 00:00:00', 'now', 'M'));
                    },
                    1)
            });
        }
        google.charts.setOnLoadCallback(initializeYear);
    }

    function drawChart(type, ID, timeName, title, arrayConsumption, isBoth) {
        var array;
        //console.log(isBoth);
        if (isBoth){
            array=[[timeName,'Electricity Consumption','Gas Consumption']];
            $.merge(array,arrayConsumption);
        }
        else{
            array=[[timeName,title+' Consumption']];
            $.merge(array,arrayConsumption);
        }
        console.log(array);
        var data = google.visualization.arrayToDataTable(array
        );
        // set common style for chart
        var options = styleChart(type, title, data.getNumberOfRows(), timeName);
        var chart = new google.visualization.BarChart(document.getElementById('chart_div'+ID));
        chart.draw(data, options);
    }

    function styleChart(type ,title, NumberOfRows, periodName){
        var chartAreaHeight;
        if (NumberOfRows <= 5){
            // set inner height to 70 pixels per row
            chartAreaHeight = NumberOfRows * 70;
        }
        else if (NumberOfRows <= 12){
            // set inner height to 50 pixels per row
            chartAreaHeight = NumberOfRows * 50;
        }
        else if (NumberOfRows <= 18){
            // set inner height to 50 pixels per row
            chartAreaHeight = NumberOfRows * 30;
        }
        else{
            // set inner height to 30 pixels per row
            chartAreaHeight = NumberOfRows * 20;
        }
        // add padding to outer height to accomodate title, axis labels, etc
        var chartHeight = chartAreaHeight + 150;
        //set color based on ELEC or GAS $view->type
        var colorSet;
        if (type==='ELEC'){
            colorSet= ['#efda00'];
        }
        else if (type==='GAS'){
            colorSet= ['#8e48b0'];
        }
        else if (type==='BOTH'){
            colorSet= ['#efda00', '#8e48b0'];
        }
        return options = {
            title: title+' Consumption Based On '+periodName,
            titleTextStyle:{fontSize: 19},
            chartArea: {
                width: '60%',
                height: chartAreaHeight
            },
            //isStacked: true,
            colors: colorSet,
            height: chartHeight,
            hAxis: {
                title: 'kWh',
                minValue: 0,
                maxValue: 0.1,
                viewWindow: {
                    min:0},
                titleTextStyle:{fontSize: 17},
                textStyle:{fontSize: 17}
            },
            vAxis: {
                title: periodName,
                titleTextStyle:{fontSize: 17},
                textStyle:{fontSize: 17},
                // textPosition: 'in'
            },
            legend: {textStyle:{fontSize: 17}},
            tooltip: {textStyle:{fontSize: 17}},
            animation: {
                duration: 1000,
                easing: 'out',
                startup: true
            }
        };
    }
</script>
